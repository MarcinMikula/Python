Wyjaśnienie kodu z Wykładu 5 krok po kroku

Przykład 1: Podstawowe operacje na krotkach
1. t = (1, "hello", 3.14): Tworzymy krotkę z trzema elementami: liczbą całkowitą, stringiem i liczbą zmiennoprzecinkową.
2. print(t[0]): Dostęp do pierwszego elementu (indeks 0). Wyświetla 1.
3. print(t[1:3]): Wycinanie (slicing) od indeksu 1 do 2 (3 nie jest uwzględniane). Wyświetla ("hello", 3.14).
4. print(t + (4, 5)): Konkatenacja – łączymy krotki. Wyświetla (1, "hello", 3.14, 4, 5).
5. print(t * 2): Powielanie – krotka jest powtórzona 2 razy. Wyświetla (1, "hello", 3.14, 1, "hello", 3.14).
6. print(len(t)): Funkcja len() zwraca długość krotki. Wyświetla 3.

Przykład 2: Funkcja zwracająca krotkę
1. def divide_and_remainder(a, b): Definiujemy funkcję, która oblicza iloraz i resztę z dzielenia a przez b.
2. quotient = a // b: Obliczamy iloraz całkowity (np. 17 // 5 = 3).
3. remainder = a % b: Obliczamy resztę (np. 17 % 5 = 2).
4. return quotient, remainder: Zwracamy krotkę z dwoma wartościami.
5. a, b = 17, 5: Ustawiamy wartości a i b.
6. q, r = divide_and_remainder(a, b): Wywołujemy funkcję i rozpakowujemy krotkę do zmiennych q i r.
7. print("Iloraz:", q, "Reszta:", r): Wyświetlamy wynik: "Iloraz: 3 Reszta: 2".

Przykład 3: Podstawowe operacje na listach
1. L = [1, "hello", 3.14]: Tworzymy listę z trzema elementami.
2. L.append(42): Dodajemy 42 na koniec listy.
3. print(L): Wyświetlamy listę: [1, "hello", 3.14, 42].
4. L[1] = "world": Zmieniamy element o indeksie 1 na "world".
5. print(L): Wyświetlamy zmodyfikowaną listę: [1, "world", 3.14, 42].
6. L.pop(): Usuwamy ostatni element (42).
7. print(L): Wyświetlamy listę po usunięciu: [1, "world", 3.14].

Przykład 4: Iteracja i modyfikacja listy
1. numbers = [1, 2, 3, 4, 5]: Tworzymy listę liczb.
2. for i in range(len(numbers)): Iterujemy po indeksach listy (0, 1, 2, 3, 4).
3. numbers[i] = numbers[i] * 2: Podwajamy każdy element:
   - numbers[0] = 1 * 2 = 2
   - numbers[1] = 2 * 2 = 4
   - numbers[2] = 3 * 2 = 6
   - numbers[3] = 4 * 2 = 8
   - numbers[4] = 5 * 2 = 10
4. print("Podwojone liczby:", numbers): Wyświetlamy wynik: [2, 4, 6, 8, 10].

Przykład 5: Porównanie zmienności
1. t = (1, 2, 3): Tworzymy krotkę.
2. t[0] = 10: Ta linia jest zakomentowana, bo spowodowałaby błąd – krotki są niezmienne.
3. L = [1, 2, 3]: Tworzymy listę.
4. L[0] = 10: Zmieniamy pierwszy element listy na 10 – to działa, bo listy są zmienne.
5. print("Zmieniona lista:", L): Wyświetlamy wynik: [10, 2, 3].

Przykład 6: Suma elementów listy (matematyka)
1. values = [10, 20, 30, 40, 50]: Tworzymy listę liczb.
2. total = 0: Inicjalizujemy zmienną total na 0.
3. for value in values: Iterujemy po elementach listy.
4. total = total + value: Dodajemy każdy element do sumy:
   - total = 0 + 10 = 10
   - total = 10 + 20 = 30
   - total = 30 + 30 = 60
   - total = 60 + 40 = 100
   - total = 100 + 50 = 150
5. print("Suma elementów:", total): Wyświetlamy wynik: 150.

Matematyczny kontekst:
- Suma elementów listy to odpowiednik sumy szeregu w matematyce: Σx_i dla i od 1 do n.
- Tutaj: 10 + 20 + 30 + 40 + 50 = 150.